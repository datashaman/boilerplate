{"version":3,"sources":["schedule.cjsx"],"names":[],"mappings":"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","file":"schedule.js","sourceRoot":"/source/","sourcesContent":["if window?\n  store = window.store\n\ndata = require(__dirname + '/../_data')\nReact = require('react/addons')\n_ = require('lodash')\nrequest = require('superagent')\n\nSchedule = React.createClass\n  statics: {\n    generateSql: (climate, types, month) ->\n      filters = []\n\n      if types.length == 0\n        # If no types selected, no rows returned\n        filters = ['1 = 0']\n      else if types.length == data.types.length\n        # If all types selected, all rows returned (no filter)\n      else\n        # Filter one or the other type\n        filters = _.map types, (type) ->\n          'Type = \\'' + type + '\\''\n\n      filters.push('Climate = \\'' + climate + '\\'')\n      filters.push(month + ' NOT EQUAL TO \\'\\'')\n\n      'select Name, ' + month + ', Type FROM ' + data.tables.schedule +\n        ' WHERE ' + filters.join(' AND ') + ' ORDER BY Name'\n\n    doFetchData: (climate, types, month, done) ->\n      request.get 'https://www.googleapis.com/fusiontables/v1/query'\n        .set 'Referer', 'http://localhost:4000'\n        .query sql: Schedule.generateSql(climate, types, month)\n        .query key: data.config.googleApiKey\n        .end (err, scheduleResponse) =>\n          if scheduleResponse.ok\n            request.get 'https://www.googleapis.com/fusiontables/v1/query'\n              .set 'Referer', 'http://localhost:4000'\n              .query sql: 'select Name, Wikipedia FROM ' + data.tables.plants + ' ORDER BY Name'\n              .query key: data.config.googleApiKey\n              .end (err, plantsResponse) =>\n                if plantsResponse.ok\n                  done null,\n                    plants: plantsResponse.body.rows\n                    schedule: scheduleResponse.body.rows\n                else\n                  done err, null\n  },\n\n  componentWillMount: ->\n    @fetchData()\n    null\n\n  componentDidUpdate: ->\n    if window?\n      if @state.fetching\n        @state.spinner = new window.Spinner().spin(document.getElementById('plants'))\n      else\n        if @state.spinner\n          @state.spinner.stop()\n          @state.spinner = null\n    null\n\n  componentWillUnmount: ->\n    if @state.spinner\n      @state.spinner.stop()\n    null\n\n  getInitialState: ->\n    today = new Date()\n    defaultTypes = _.clone(data.types)\n\n    types: if store? then store.get('types', defaultTypes) else defaultTypes\n    climate: if store? then store.get('climate', 'Dry Summer - Wet Winter') else 'Dry Summer - Wet Winter'\n    month: data.months[today.getMonth()]\n    fetching: true\n    plants: []\n    schedule: []\n    spinner: null\n\n  handleTypeClick: (type) ->\n    =>\n      pos = @state.types.indexOf(type)\n      if pos == -1\n        @state.types.push(type)\n      else\n        # You can't disable all types\n        # Do nothing if there is only one left\n        return false if @state.types.length == 1\n\n        @state.types.splice(pos, 1)\n\n      store('types', @state.types)\n      @fetchData()\n      false\n\n  handleMonthClick: (month) ->\n    =>\n      @state.month = month\n      @fetchData()\n      false\n\n  fetchData: ->\n    @setState({ fetching: true })\n\n    Schedule.doFetchData @state.climate, @state.types, @state.month, (err, data) =>\n      data.fetching = false\n      @setState data\n\n  render: ->\n    types = _.map data.glyphicons, (icon, name) =>\n      pos = @state.types.indexOf(name)\n      active = pos != -1\n      <button key={name} type=\"button\" onClick={@handleTypeClick(name)} className={'btn btn-default' + (if active then ' active' else '')}><span className={'glyphicon glyphicon-' + icon}></span><span className=\"type\">{name}</span></button>\n\n    months = data.months.map (month) =>\n      active = month == @state.month\n      <button key={month} type=\"button\" ref=\"button\" onClick={@handleMonthClick(month)} className={'col-xs-2 col-md-1 btn btn-default' + (if active then ' active' else '')}>{{ month }}</button>\n\n    if @state.fetching\n      plants = ''\n    else\n      plants = _.map @state.schedule, (schedule) =>\n        name = schedule[0]\n        plant = _.find @state.plants, (plant) -> plant[0] == name\n        wikipedia = if plant then plant[1] else null\n\n        <li key={schedule[0]} className=\"list-group-item\">\n          {if wikipedia then <a target=\"_blank\" className=\"wikipedia\" href={wikipedia}>\n          <span className=\"glyphicon glyphicon-info-sign pull-right\"></span></a>}\n          <span className=\"instruction pull-right\">{data.instructions[schedule[1]]}</span>\n          <span className={'glyphicon glyphicon-' + data.glyphicons[schedule[2]]} aria-hidden=\"true\"></span>\n          {schedule[0]}\n        </li>\n\n    <div>\n      <div className=\"page-header\">\n          <div className=\"container\">\n              <h2>{ @state.climate }</h2>\n              <div id=\"types\" className=\"btn-group\" role=\"toolbar\" aria-label=\"plant types\">\n                  {types}\n              </div>\n          </div>\n      </div>\n\n      <div className=\"container\">\n          <div className=\"months row\">{months}</div>\n          <ul id=\"plants\" className=\"list-group\">{plants}</ul>\n      </div>\n    </div>\n\nmodule.exports = Schedule\n"]}